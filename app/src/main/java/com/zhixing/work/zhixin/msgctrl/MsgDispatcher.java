package com.zhixing.work.zhixin.msgctrl;import android.os.Message;import android.util.SparseArray;import java.util.ArrayList;import java.util.List;/** * Created by lhj on 18/5/8 * 消息调度器 */public class MsgDispatcher {    public static SparseArray<int []> mControllers = new SparseArray<>();    /**     * 注册messages 到controller     * @param controllerId     * @param messageIds     */    public static void register(int controllerId, int[] messageIds){        mControllers.put(controllerId,messageIds);    }    public static List<Integer> findControllerId(int msgId){       List<Integer> controllers = new ArrayList<>();       int len = mControllers.size();        for (int i = 0; i < len; i++) {            int[] msgIds = mControllers.valueAt(i);            int valLen = msgIds.length;            for (int j = 0; j < valLen; j++) {                if(msgIds[j] == msgId){                    controllers.add(mControllers.keyAt(i));                }            }        }        return controllers;    }    public static void dispatchMessage(Message message){        List<Integer> controllerIds = findControllerId(message.what);        for (Integer controllerId : controllerIds){            AbstractController controller = ControllerFactory.createController(controllerId);            if(controller != null){                controller.sendMessage(message);            }        }    }    public static void dispatchMessage(int msgId,int arg1,int arg2,Object obj){        Message msg = Message.obtain();        msg.what = msgId;        msg.arg1 = arg1;        msg.arg2 = arg2;        msg.obj = obj;        dispatchMessage(msg);    }    public static void dispatchMessage(int msgId,Object obj){        dispatchMessage(msgId,-1,-1,obj);    }    public static void dispatchMessage(int msgId){        dispatchMessage(msgId,null);    }}